name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger the workflow on version tags

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16' 

    - name: Redirect to SchoolProject
      run: cd ./SchoolProject

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Redirect to ClientProject
      run: cd ../ClientProject

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Pack Client folder
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'zip'
          filename: 'ClientProject-release.zip'
          directory: './ClientProject/dist'
    
    - name: Pack School folder
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'zip'
          filename: 'SchoolProject-release.zip'
          directory: './SchoolProject/dist'

    - name: Upload Release Client Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ClientProject/dist
        asset_name: ClientProject-release.zip
        asset_content_type: application/zip
    
    - name: Upload Release School Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./SchoolProject/dist
        asset_name: SchoolProject-release.zip
        asset_content_type: application/zip
    
    - name: Upload Release Python Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ServerProject/server.py
        asset_name: APIServer-release.py
